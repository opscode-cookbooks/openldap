#####
#
# This is a slapd.conf file.  See slapd.conf(5) for more info.
#
# Generated by Chef for <%= node['fqdn'] %>
#
# $Id:$
####

# TLS configuration
TLSCertificateFile     <%= node['openldap']['dir'] %>/ssl/<%= node['openldap']['server'] %>.pem
TLSCertificateKeyFile  <%= node['openldap']['dir'] %>/ssl/<%= node['openldap']['server'] %>.pem

# Schema and objectClass definitions
<% node['openldap']['slapd_schema'].each do |schema| -%>
<% if schema[0] == '/' %>
include         <%= schema %>
<% else %>
include         <%= node['openldap']['dir'] %>/schema/<%= schema %>.schema
<% end %>
<% end -%>

# Where the pid file is put. The init.d script
# will not stop the server if you change this.
pidfile         <%= node['openldap']['run_dir'] %>/slapd.pid

# List of arguments that were passed to the server
argsfile        <%= node['openldap']['run_dir'] %>/slapd.args

# Read slapd.conf(5) for possible values
loglevel        <%= node['openldap']['slapd_loglevel'] %>

<% unless node['platform'] == "centos" -%>
# Where the dynamically loaded modules are stored
modulepath	<%= node['openldap']['module_dir'] %>
<% if node['openldap']['slapd_type'] == "master" -%>
moduleload  syncprov
<% end -%>
<% node['openldap']['slapd_modules'].each do |modulename| -%>
moduleload  <%= modulename %>
<% end -%>
<% end -%>

# The maximum number of entries that is returned for a search operation
sizelimit <%= node['openldap']['slapd_sizelimit'] %>

# The tool-threads parameter sets the actual amount of cpu's that is used
# for indexing.
tool-threads <%= node['openldap']['slapd_tool-threads'] %>


######
# ACLS
######

<% @acl.each do |acl| %>
access <%= acl[0] %>
<% acl[1].each do |entry| %>
  <%= entry %>
<% end -%>
<% end -%>

#######################################################################
# Specific Backend Directives for hdb:
# Backend specific directives apply to this backend until another
# 'backend' directive occurs
backend		hdb

#####
# Databases
#####
<% node['openldap']['slapd_databases'].sort.each do |name, database| -%>
database        <%= database['type']%>
suffix          <%= database['suffix'] || node['openldap']['basedn'] %>
rootdn          <%= database['rootdn'] || "cn=admin,#{node['openldap']['basedn']}" %>
rootpw          <%= database['rootpw'] || node['openldap']['rootpw'] %>
directory       <%= database['directory'] %>
lastmod         <%= database['lastmod'] %>

##
# Indexes
##
<% unless (database['indexes'] || {})['default'].nil? %>
index default <%= database['indexes']['default'] %>
<% end -%>
<% (database['indexes'] || {}).sort.each do |attributes, options| -%>
<% next if attributes == 'default' || options.nil? || options == false -%>
index <%= attributes %> <%= options == true ? '' : options %>
<% end -%>

# Other options

<% (database['options'] || {}).sort.each do |option, value| -%>
<% if value.kind_of? Array %>
<% value.each do |singlevalue| %>
<%= option %> <%= singlevalue %>
<% end -%>
<% else -%>
<%= option %> <%= value %>
<% end -%>
<% end -%>

<% end -%>
### END Databases

<% if node['openldap']['slapd_type'] == "master" -%>
overlay syncprov
syncprov-checkpoint 100 10
syncprov-sessionlog 100
<% else -%>
syncrepl rid=<%= node['openldap']['slapd_rid'] %>
  provider=ldap://<%= node['openldap']['slapd_master'] %>:389
  type=refreshAndPersist
  interval=01:00:00:00
  searchbase="<%= node['openldap']['basedn'] %>"
  filter="(objectClass=*)"
  scope=sub
  schemachecking=off
  bindmethod=simple
  binddn="cn=syncrole,<%= node['openldap']['basedn'] %>"
  starttls=yes
  credentials="<%= node['openldap']['slapd_replpw'] %>"
<% end -%>

<% (node['openldap']['slapd_options'] || {}).sort.each do |option, value| -%>
<% if value.kind_of? Array %>
<% value.each do |singlevalue| %>
<%= option %> <%= singlevalue %>
<% end -%>
<% else -%>
<%= option %> <%= value %>
<% end -%>
<% end -%>
